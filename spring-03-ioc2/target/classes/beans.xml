<?xml version="1.0" encoding="UTF8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

<!--    <bean id="user" class="com.yan.pojo.User">-->
<!--        <property name="name" value="张三"></property>-->
<!--    </bean>-->

<!--    &lt;!&ndash;构造器注入&ndash;&gt;-->
<!--    &lt;!&ndash; 有参构造传参方式1: 下标赋值 &ndash;&gt;-->
<!--    <bean id="user" class="com.yan.pojo.User">-->
<!--        <constructor-arg index="0" value="张三2"></constructor-arg>-->
<!--    </bean>-->

<!--    &lt;!&ndash;有参构造传参方式2: 通过类型赋值(有两个参数就不能用了，所以不建议使用)&ndash;&gt;-->
<!--    <bean id="user" class="com.yan.pojo.User">-->
<!--        <constructor-arg type="java.lang.String" value="张三3"/>-->
<!--    </bean>-->

    <!--有参构造传参方式3：直接通过参数名来赋值-->
    <bean id="user" class="com.yan.pojo.User">
        <constructor-arg name="name" value="张三4"/>
    </bean>

    <!--
    id: bean的唯一标识符，也就是相当于我们学的对象名
    class: bean，对象所对应的全限定名：包名 + 类名
    name: 也是别名，而且name，可以取多个别名
    -->
    <bean id="userT" class="com.yan.pojo.UserT" name="user2 u2,u3;u4">
        <property name="name" value="张三"/>
    </bean>

<!--    &lt;!&ndash;如果添加了别名，就可以用别名获取这个对象&ndash;&gt;-->
<!--    <alias name="user" alias="newUser"></alias>-->
</beans>